plugins {
    id "java"
    id "maven-publish"
    id "com.github.johnrengelman.shadow" version "8.1.1"
}

group = 'org.lilbrocodes'
version = project.version
mc_version = project.mc_version

repositories {
    mavenCentral()
    maven {
        name = "spigotmc-repo"
        url = "https://hub.spigotmc.org/nexus/content/repositories/snapshots/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }
    maven {
        name = "jitpack"
        url = "https://jitpack.io"
    }
}

dependencies {
    implementation "com.github.LilBroCodes:Commander:${project.commander_version}"
    compileOnly "org.spigotmc:spigot-api:${project.mc_version}-${project.spigot_version}"
}

tasks {
    build {
        dependsOn(shadowJar)
    }

    jar {
        archiveBaseName.set("conductor")
    }
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'

    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release.set(targetJavaVersion)
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}

tasks.register('sourcesJar', Jar) {
    from sourceSets.main.allSource
    archiveClassifier.set('sources')
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}
